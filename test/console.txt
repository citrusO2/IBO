rebar compile
erl

cd("ebin"),
ibo_app:install([node()]),
mnesia:start(),
directory_server:start_link(),

rd(ibo_user, {username, firstname, lastname,groups = []}),
Row = #ibo_user{username="ff",firstname="Fabian",lastname="Froelich"},
F = fun() ->
        mnesia:write(Row)
        end,
mnesia:transaction(F),

directory_server:get_user("ff").

ibo_app:install([node()]).

directory_server:create_user({ibo_user,<<"tu">>,<<"Theodor">>,<<"Urula">>,[<<"marketing">>,<<"admins">>],undefined},<<"pass123">>).
directory_server:create_user({ibo_user,<<"fu">>,<<"Fabian">>,<<"Ustafa">>,[<<"it">>],undefined},<<"pass123">>).
directory_server:write_group({ibo_group,<<"acme">>,<<"Main Group of ACME Incorporated">>, undefined}).
directory_server:write_group({ibo_group,<<"marketing">>,<<"Marketing Department Group">>, <<"acme">>}).
directory_server:write_group({ibo_group,<<"it">>,<<"Marketing Department Group">>, <<"acme">>}).
directory_server:write_group({ibo_group,<<"admins">>,<<"IT Department Group">>, <<"it">>}).

mnesia:clear_table(ibo_boxindex).
mnesia:clear_table(ibo_boxdata).

rr("src/xbo/xbo_records.hrl").

MyRecord = #ibo_xbo{
               id = <<"1-141233">>,
               format_indicator = 1,
               created_by = <<"hanswurst">>,
               template = <<"marketingbudgetdecision">>,
               router = ["xbo_router"],
               steps = [#ibo_xbostep{
                   domain = <<"box_server">>,
                   local = <<"marketing">>,
                   description = <<"Accept or deny the marketing budget">>,
                   commands = [
                                  #ibo_xboline{
                                      library = xlib_box,
                                      command = webinit,
                                      args = [
                                          #{
                                              <<"title">> => <<"Marketing Budget - Decision2">>,
                                              <<"description">> => <<"Approve the current marketing budget of 250.000 EUR">>,
                                              <<"type">> => <<"object">>,
                                              <<"properties">> => #{
                                                  <<"reason">> => #{
                                                      <<"title">> => <<"Reason">>,
                                                      <<"description">> => <<"The reason for your decision">>,
                                                      <<"type">> => <<"string">>
                                                  },
                                                  <<"yesno">> => #{
                                                      <<"title">> => <<"Decide">>,
                                                      <<"description">> => <<"tick your decision">>,
                                                      <<"type">> => <<"string">>,
                                                      <<"enum">> => [<<"no">>,<<"yes">>,<<"maybe">>]
                                                  }
                                              },
                                              <<"required">> => [<<"reason">>, <<"yesno">>]
                                          }
                                      ]
                                  },#ibo_xboline{library = xlib, command = cjump, args = [4, fun(StepData, OtherStepData) -> case maps:find(<<"yesno">>, StepData#ibo_xbostepdata.vars) of {ok, <<"yes">>} -> true; _Else -> false end end]},
                                  #ibo_xboline{library = xlib, command = send, args = [1, "box_server"]},
                                  #ibo_xboline{library = xlib, command = send, args = [2, "box_server"]}
                              ]
               }, #ibo_xbostep{
                                    domain = <<"box_server">>,
                                    local = <<"marketing">>,
                                    description = <<"Accept or deny the marketing budget">>,
                                    commands = [#ibo_xboline{
                                                     library = xlib_box,
                                                     command = webinit,
                                                     args = [
                                                         #{
                                                             <<"title">> => <<"Marketing Budget - Decision approved">>,
                                                             <<"description">> => <<"Information that the Marketing Budget was approved">>,
                                                             <<"type">> => <<"object">>,
                                                             <<"properties">> => #{
                                                               <<"ok">> => #{
                                                                   <<"title">> => <<"ok">>,
                                                                   <<"description">> => <<"confirm receive of message">>,
                                                                   <<"type">> => <<"string">>,
                                                                   <<"enum">> => [<<"ok">>]
                                                               }
                                                           },
                                                           <<"required">> => [<<"ok">>]
                                                         }
                                                     ]
                                                 },#ibo_xboline{library = xlib, command = finish}
                                             ]
                              }
               ]
           }.

box_server:process_xbo(MyRecord, 1).

% new startup procedure

Directory = <<"DIRECTORY1">>.
watchdog_server:start_iactor(directory_sup, Directory).

Error = <<"ERROR1">>.
watchdog_server:start_iactor(error_sup, Error).

Box = <<"BOX1">>.
watchdog_server:start_iactor(box_sup, Box).

Router = <<"ROUTER1">>.
RouterArgs = #{name => Router, allowed => [Box]}.
watchdog_server:start_iactor(xbo_router_sup, RouterArgs).

Repo = <<"REPO1">>.
RepoArgs = #{name => Repo, router => [Router], error => [Error], n=>1, managegroups =>["ACL_Allow_Template_Storing"]}.
watchdog_server:start_iactor(repo_sup, RepoArgs).

Web = <<"WEB1">>.
WebArgs = #{name => Web, directory => Directory, box => Box, repo => Repo}.
WebArgs = #{name => Web, directory => Directory, box => Box, repo => Repo}.

% rule groups
directory_server:write_group(Directory, {ibo_group,<<"ACL">>,<<"Access Control List Main Group (Rule Group)">>, []}).
directory_server:write_group(Directory, {ibo_group,<<"ACL_Allow_Template_Storing">>,<<"Groups allows the storing of templates (Rule Group)">>, [<<"ACL">>]}).

% role groups
directory_server:write_group(Directory, {ibo_group,<<"acme">>,<<"Main Group of ACME Incorporated">>, []}).
directory_server:write_group(Directory, {ibo_group,<<"marketing">>,<<"Marketing Department Group">>, [<<"acme">>]}).
directory_server:write_group(Directory, {ibo_group,<<"it">>,<<"IT Department Group">>, [<<"acme">>]}).
directory_server:write_group(Directory, {ibo_group,<<"it_admins">>,<<"IT Department's Admin Group">>, [<<"it">>, <<"ACL_Allow_Template_Storing">>]}).

% users
directory_server:create_user(Directory, {ibo_user,<<"tu">>,<<"Theodor">>,<<"Urula">>,[<<"marketing">>,<<"it_admins">>],undefined},<<"pass123">>).
directory_server:create_user(Directory, {ibo_user,<<"fu">>,<<"Fabian">>,<<"Ustafa">>,[<<"it">>],undefined},<<"pass123">>).

% useful commands
watchdog_server:get_iactors().
watchdog_server:global_xactors().
watchdog_server:get_global_xactors().